{"version":3,"file":"js/571.fcc42386.js","mappings":"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","sources":["webpack://toutiao-m/./src/views/home/home.vue","webpack://toutiao-m/./src/views/home/components/article-list.vue","webpack://toutiao-m/./src/components/article-item.vue","webpack://toutiao-m/src/components/article-item.vue","webpack://toutiao-m/./src/components/article-item.vue?2612","webpack://toutiao-m/./src/components/article-item.vue?9d27","webpack://toutiao-m/src/views/home/components/article-list.vue","webpack://toutiao-m/./src/views/home/components/article-list.vue?5af6","webpack://toutiao-m/./src/views/home/components/article-list.vue?68ba","webpack://toutiao-m/./src/views/home/components/channel-edit.vue","webpack://toutiao-m/src/views/home/components/channel-edit.vue","webpack://toutiao-m/./src/views/home/components/channel-edit.vue?ac79","webpack://toutiao-m/./src/views/home/components/channel-edit.vue?80ac","webpack://toutiao-m/src/views/home/home.vue","webpack://toutiao-m/./src/views/home/home.vue?29a9","webpack://toutiao-m/./src/views/home/home.vue?6353"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home-container\"},[_c('van-nav-bar',{staticClass:\"page-nav-bar\",attrs:{\"title\":\"标题\",\"fixed\":\"\"},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('van-button',{staticClass:\"search-btn\",attrs:{\"round\":\"\",\"icon\":\"search\",\"type\":\"info\",\"to\":\"/search\"}},[_vm._v(\" 搜索 \")])]},proxy:true}])}),_c('van-tabs',{staticClass:\"channel-tabs\",attrs:{\"animated\":\"\",\"swipeable\":\"\",\"swipe-threshold\":\"2\"},scopedSlots:_vm._u([{key:\"nav-right\",fn:function(){return [_c('div',{staticClass:\"placeholder\"}),_c('div',{staticClass:\"hamburger-btn\",on:{\"click\":function($event){_vm.isChannelEditShow = true}}},[_c('i',{staticClass:\"toutiao toutiao-gengduo\"})])]},proxy:true}]),model:{value:(_vm.active),callback:function ($$v) {_vm.active=$$v},expression:\"active\"}},_vm._l((_vm.channels),function(obj){return _c('van-tab',{key:obj.id,attrs:{\"title\":obj.name}},[_c('article-list',{attrs:{\"channel\":obj}})],1)}),1),_c('van-popup',{staticClass:\"edit-channel-popup\",style:({ height: '100%' }),attrs:{\"position\":\"bottom\",\"closeable\":\"\",\"close-icon-position\":\"top-left\"},model:{value:(_vm.isChannelEditShow),callback:function ($$v) {_vm.isChannelEditShow=$$v},expression:\"isChannelEditShow\"}},[_c('channel-edit',{attrs:{\"myChannels\":_vm.channels,\"active\":_vm.active,\"allChannels\":_vm.allChannels},on:{\"update-active\":_vm.onUpdateActive}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"artcle-list\"},[_c('van-pull-refresh',{attrs:{\"success-text\":_vm.refreshingText,\"success-duration\":\"1500\"},on:{\"refresh\":_vm.onRefresh},model:{value:(_vm.refreshing),callback:function ($$v) {_vm.refreshing=$$v},expression:\"refreshing\"}},[_c('van-list',{attrs:{\"finished\":_vm.finished,\"finished-text\":\"没有更多了\",\"error\":_vm.error,\"error-text\":\"请求失败，点击重新加载\"},on:{\"update:error\":function($event){_vm.error=$event},\"refresh\":_vm.onRefresh,\"load\":_vm.onLoad},model:{value:(_vm.loading),callback:function ($$v) {_vm.loading=$$v},expression:\"loading\"}},_vm._l((_vm.list),function(item,i){return _c('ArticleItem',{key:i,attrs:{\"article\":item}})}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"article-item\"},[_c('van-cell',{attrs:{\"to\":`/article/${ _vm.article.art_id }`},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_c('div',{staticClass:\"title van-multi-ellipsis--l2\"},[_vm._v(\" \"+_vm._s(_vm.article.title)+\" \")])]},proxy:true},{key:\"label\",fn:function(){return [(_vm.article.cover.type === 3)?_c('div',{staticClass:\"cover-wrap\"},_vm._l((_vm.article.cover.images),function(img,index){return _c('div',{key:index,staticClass:\"cover-item\"},[_c('van-image',{staticClass:\"right-image cover-item\",attrs:{\"fit\":\"cover\",\"src\":img}})],1)}),0):_vm._e(),_c('div',{staticClass:\"author-info\"},[_c('span',[_vm._v(_vm._s(_vm.article.aut_name))]),_c('span',[_vm._v(_vm._s(_vm.article.comm_count)+\"评论\")]),_c('span',[_vm._v(_vm._s(_vm._f(\"relativeTime\")(_vm.article.pubdate)))])])]},proxy:true},(_vm.article.cover.type === 1)?{key:\"default\",fn:function(){return [_c('van-image',{attrs:{\"width\":\"100\",\"height\":\"100\",\"src\":_vm.article.cover.images[0]}})]},proxy:true}:null],null,true)})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"article-item\">\r\n    <van-cell :to=\"`/article/${ article.art_id }`\">\r\n\r\n      <!-- 普通样式标题信息 -->\r\n      <template #title>\r\n        <div class=\"title van-multi-ellipsis--l2\">\r\n        {{ article.title }}\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 底部信息 - 三个图片 -->\r\n      <template #label>\r\n        <!-- 判断是否是三张图片来是否显示这个插槽 -- 通过返回的数据发现article.cover.type记录了图片数量 -->\r\n        <div v-if=\"article.cover.type === 3\" class=\"cover-wrap\">\r\n          <div\r\n            class=\"cover-item\"\r\n            v-for=\"(img, index) in article.cover.images\"\r\n            :key=\"index\"\r\n          >\r\n            <van-image\r\n              fit=\"cover\"\r\n              class=\"right-image cover-item \"\r\n              :src=\"img\"\r\n            ></van-image>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 作者信息 -->\r\n        <div class=\"author-info\">\r\n          <span>{{ article.aut_name }}</span>\r\n          <span>{{ article.comm_count }}评论</span>\r\n          <span>{{ article.pubdate | relativeTime }}</span>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 通过 default插槽来展示单张图片的样式表现 判断是否是一张图片来是否显示这个插槽-->\r\n      <template #default v-if=\"article.cover.type === 1\">\r\n        <van-image\r\n          width=\"100\"\r\n          height=\"100\"\r\n          :src=\"article.cover.images[0]\"\r\n        ></van-image>\r\n      </template>\r\n\r\n    </van-cell>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ArticleItem',\r\n  props: {\r\n    article: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n\r\n    }\r\n  },\r\n  methods: {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.article-item {\r\n  // 标题样式 - 多行省略通过vant默认的class类名完成\r\n  .title {\r\n    font-size: 32px;\r\n    color: #3a3a3a;\r\n  }\r\n\r\n  // 修改右边 盒子的样式 -- 单张图片展示结构\r\n  .van-cell__value {\r\n    flex: unset;\r\n    width: 230px;\r\n    height: 146px;\r\n    padding-left: 25px;\r\n  }\r\n\r\n  .right-image {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  // 多图样式 -- 通过flex等分宽度， 同时:not(:last-child)来不影响最后一个组件(less中的伪类需要 & 符号)\r\n  .cover-wrap {\r\n    display: flex;\r\n    padding: 30px;\r\n    .cover-item {\r\n      flex: 1;\r\n      height: 146px;\r\n      &:not(:last-child) {\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .author-info {\r\n    span {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./article-item.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./article-item.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./article-item.vue?vue&type=template&id=28fa99de&scoped=true&\"\nimport script from \"./article-item.vue?vue&type=script&lang=js&\"\nexport * from \"./article-item.vue?vue&type=script&lang=js&\"\nimport style0 from \"./article-item.vue?vue&type=style&index=0&id=28fa99de&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"28fa99de\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"artcle-list\">\r\n    <!-- 下拉刷新 -->\r\n    <van-pull-refresh\r\n      v-model=\"refreshing\"\r\n      @refresh=\"onRefresh\"\r\n      :success-text=\"refreshingText\"\r\n      success-duration=\"1500\"\r\n    >\r\n\r\n      <!-- 数据列表 -->\r\n      <van-list\r\n        v-model=\"loading\"\r\n        :finished=\"finished\"\r\n        finished-text=\"没有更多了\"\r\n        :error.sync=\"error\"\r\n        error-text=\"请求失败，点击重新加载\"\r\n        @refresh=\"onRefresh\"\r\n        @load=\"onLoad\"\r\n      >\r\n\r\n        <!-- <van-cell v-for=\"(item, i) in list\" :key=\"i\" :title=\"item.title\" /> -->\r\n        <ArticleItem\r\n          v-for=\"(item, i)\r\n          in list\" :key=\"i\"\r\n          :article=\"item\"\r\n        >\r\n        </ArticleItem>\r\n      </van-list>\r\n    </van-pull-refresh>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getArticlesAPI } from '../../../api/index.js'\r\nimport ArticleItem from '../../../components/article-item.vue'\r\n\r\nexport default {\r\n  name: 'artcleList',\r\n\r\n  data () {\r\n    return {\r\n      list: [], // 存储列表数据的数值\r\n      loading: false, // 控制加载状态的变量, loading=true  不触发加载事件@load\r\n      finished: false, // 控制数据加载结束的标志, 当finished=true时,\r\n      timesTamp: 0, // 请求下一页的数据时间戳\r\n      error: false, // 控制列表加载失败时的状态 -- 当error为true时不会再触发@load事件\r\n      refreshing: false,\r\n      refreshingText: '更新成功'\r\n    }\r\n  },\r\n\r\n  components: {\r\n    ArticleItem\r\n  },\r\n\r\n  props: {\r\n    channel: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // 初始化,以及滚动到底部时会触发@load事件 绑定的onLoad方法\r\n    async onLoad () {\r\n      // 当组件滚动到底部时，会触发 load 事件并将 loading 设置成 true。此时可以发起异步操作并更新数据，数据更新完毕后，将 loading 设置成 false 即可。若数据已全部加载完毕，则直接将 finished 设置成 true 即可。\r\n      try {\r\n        // 01 请求数据接口\r\n        const { data: res } = await getArticlesAPI({\r\n          channel_id: this.channel.id,\r\n          timestamp: this.timesTamp || Date.now() // 请求新的推荐数据时间戳, 如果已请求过了, 那么使用接口返回的哪个时间戳\r\n        })\r\n        // console.log(res)\r\n\r\n        // 02 把请求的结果数据 push到数值list的最后\r\n        this.list.push(...res.data.results)\r\n\r\n        // 03 加载状态结束后需要吧加载状态loading设置为结束状态\r\n        // loading关闭后才会触发下一次的@load事件\r\n        this.loading = false\r\n\r\n        // 04 通过某个条件判断数据全部加载完成, 需要讲finished设置为 true,在此之后onLoad方法永不调用(@load不触发)\r\n        if (res.data.results.length === 0) {\r\n          this.finished = true\r\n        } else {\r\n          this.timestamp = res.data.pre_timestamp // 设置时间戳为上移请求的数据中的时间戳\r\n        }\r\n      } catch (err) {\r\n        this.error = true // 展示错误提示状态\r\n        this.loading = false\r\n        this.$toast('接口请求失败, 稍后重试')\r\n      }\r\n    },\r\n\r\n    // 下拉刷新时触发的方法\r\n    async onRefresh () {\r\n      try {\r\n        // if 不必要只是用于触发数据请求失败\r\n        if (Math.random() < 0.4) {\r\n          JSON.parse('aaa')\r\n        }\r\n\r\n        // 01 请求数据接口\r\n        const { data: res } = await getArticlesAPI({\r\n          channel_id: this.channel.id,\r\n          timestamp: Date.now() // 下拉刷新获取的是最新数据\r\n        })\r\n        this.list.unshift(...res.data.results)\r\n\r\n        // 关闭加载状态\r\n        this.refreshing = false\r\n\r\n        // 更新下拉成功时的提示内容\r\n        this.refreshingText = `刷新成功, 更新了${res.data.results.length}条数据`\r\n      } catch (err) {\r\n        // 失败时既要关闭刷新关闭状态还要提示失败信息、\r\n        this.refreshingText = '刷新失败, 请重试'\r\n        this.refreshing = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .artcle-list {\r\n    overflow-y: auto;  // Y 方向自动触发滚动条\r\n    /*\r\n      将下列代码粘贴到控制台输出一下，就可以知道哪个元素触发了滚动\r\n      function findScroller(element) {\r\n        element.onscroll = function() { console.log(element)}\r\n        Array.from(element.children).forEach(findScroller);\r\n      }\r\n\r\n      findScroller(document.body)\r\n    */\r\n    // 通过vw/vh来设置, 不会受到父元素影响\r\n    // 这个组件设置高度会发现，页面滚动时不再触发body而是这个组件的div 这样当点击其他频道再点回来时是上一次的位置(如果是body在滚动那么会回到初始位置)\r\n    // 667 视口高度 46头标题高度 41 导航高度 50 底部导航高度\r\n    height: 79vh; /* （667 - （46 + 41 +50）） / 667 约等于0.79 */\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./article-list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./article-list.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./article-list.vue?vue&type=template&id=91261710&scoped=true&\"\nimport script from \"./article-list.vue?vue&type=script&lang=js&\"\nexport * from \"./article-list.vue?vue&type=script&lang=js&\"\nimport style0 from \"./article-list.vue?vue&type=style&index=0&id=91261710&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"91261710\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"channel-editer\"},[_c('van-cell',{attrs:{\"title\":\"我的频道\"},scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('van-button',{staticClass:\"edit-btn\",attrs:{\"round\":\"\",\"size\":\"mini\",\"type\":\"danger\",\"plain\":\"\"},on:{\"click\":function($event){_vm.isEditShow = !_vm.isEditShow}}},[_vm._v(\" \"+_vm._s(_vm.isEditShow ? '完成' : '编辑')+\" \")])]},proxy:true}])}),_c('van-grid',{staticClass:\"my-grid\",attrs:{\"gutter\":10}},_vm._l((_vm.myChannels),function(obj,index){return _c('van-grid-item',{key:obj.id,staticClass:\"channel-item\",class:{active: _vm.active === index},attrs:{\"text\":obj.name},on:{\"click\":function($event){return _vm.onMyChannel(obj, index)}},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c('van-icon',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isEditShow && index !== 0),expression:\"isEditShow && index !== 0\"}],attrs:{\"name\":\"close\"}})]},proxy:true}],null,true)})}),1),_c('van-cell',{attrs:{\"title\":\"推荐频道\"}}),_c('van-grid',{staticClass:\"recommend-grid\",attrs:{\"gutter\":10}},_vm._l((_vm.recommendChannels_lodash),function(obj){return _c('van-grid-item',{key:obj.id,staticClass:\"channel-item\",attrs:{\"text\":obj.name,\"icon\":\"plus\"},on:{\"click\":function($event){return _vm.onAddChannel(obj)}}})}),1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"channel-editer\">\r\n\r\n    <!-- 我的频道 -->\r\n    <van-cell title=\"我的频道\">\r\n      <template #default>\r\n        <van-button\r\n          class=\"edit-btn\"\r\n          round\r\n          size=\"mini\"\r\n          type=\"danger\"\r\n          plain\r\n          @click=\"isEditShow = !isEditShow\"\r\n        >\r\n          {{ isEditShow ? '完成' : '编辑' }}\r\n        </van-button>\r\n      </template>\r\n    </van-cell>\r\n\r\n    <!-- 我的频道选项 -->\r\n    <!--\r\n      为什么active要与index做比较\r\n        答：父组件中的active是一索引来确定那个频道高亮的; 这儿要一一对应\r\n     -->\r\n    <van-grid :gutter=\"10\" class=\"my-grid\">\r\n      <van-grid-item\r\n        class=\"channel-item\"\r\n        v-for=\"(obj, index) in myChannels\"\r\n        :key=\"obj.id\"\r\n        :text=\"obj.name\"\r\n        :class=\"{active: active === index}\"\r\n        @click=\"onMyChannel(obj, index)\"\r\n      >\r\n        <template #icon>\r\n          <van-icon name=\"close\" v-show=\"isEditShow && index !== 0\" />\r\n        </template>\r\n      </van-grid-item>\r\n    </van-grid>\r\n\r\n    <!-- 推荐频道 -->\r\n    <van-cell title=\"推荐频道\"></van-cell>\r\n\r\n    <!-- 推荐频道选项 -->\r\n    <van-grid :gutter=\"10\" class=\"recommend-grid\">\r\n      <van-grid-item\r\n        class=\"channel-item\"\r\n        v-for=\"obj in recommendChannels_lodash\"\r\n        :key=\"obj.id\"\r\n        :text=\"obj.name\"\r\n        icon=\"plus\"\r\n        @click=\"onAddChannel(obj)\"\r\n      />\r\n    </van-grid>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { addUserAllChannelsAPI, deleteUserAllChannelsAPI } from '../../../api/index.js'\r\nimport { setItem } from '../../../utils/storage.js'\r\n/*\r\n     目标：处理推荐频道, my频道 + 推荐频道 = 全部频道\r\n        => 数组过滤(来筛选出推荐频道)\r\n        => 当我的频道, 或者全部频道发送变化时, 就需要去对推荐频道进行一次新的筛选\r\n        => computed 计算属性\r\n*/\r\n\r\n/*\r\n  目标：通过频道推荐, 将新的频道添加到我的频道中\r\n  => 将点击的元素push到myChannel中\r\n*/\r\n\r\n/*\r\n  目标: 当非编辑状态时 - 实现切换频道\r\n  01 ： 关闭弹出层\r\n  02 ： 在home页面切换到选中频道\r\n*/\r\n\r\n/*\r\n  目标：在编辑状态 -- 实现删除my频道\r\n  01 splice 删除数组中的某一元素\r\n  02 当删除的元素的索引小于 当前元素, 那么让父元素的active  -1\r\n  03 当删除的元素的索引等于 当前元素, 那么让父元素的active  -1\r\n*/\r\nexport default {\r\n  name: 'channelEdit',\r\n\r\n  props: {\r\n    // 接受父组件传递过来的频道数组\r\n    myChannels: { // 当前用户频道\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 在父组件中请求全部频道接口 并传递数据过来 -- 为了用户体验。否则打开频道层时网速过慢会出现空白\r\n    allChannels: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n\r\n    // 接受父组件传递的active用于判断那个高亮显示\r\n    active: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      myChannelsClone: this.myChannels,\r\n      isEditShow: false\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // 添加频道\r\n    async onAddChannel (newChannel) {\r\n      this.myChannelsClone.push(newChannel)\r\n      // console.log(this.myChannels, 2)\r\n\r\n      // 数据持久化处理\r\n      if (this.user) {\r\n        // 已登录  -- 调用接口\r\n        try {\r\n          // 方式一 那所有频道数据传过去\r\n          // await addUserAllChannelsAPI({\r\n          //   channel: this.myChannels.map((channel, index) => {\r\n          //     channel.seq = index\r\n          //     return channel\r\n          //   })\r\n          // })\r\n\r\n          // 方拾二 只传新添加的过去\r\n          const channel = [\r\n            {\r\n              id: newChannel.id,\r\n              seq: this.myChannels.length - 1\r\n            }\r\n          ]\r\n\r\n          await addUserAllChannelsAPI({\r\n            channels: channel\r\n          })\r\n          this.$toast('添加成功')\r\n        } catch (err) {\r\n          this.$toast('添加失败')\r\n        }\r\n      } else {\r\n        setItem('TOUTIAO_CHANNELS', this.myChannels)\r\n      }\r\n    },\r\n\r\n    // 点击我的频道中的方法\r\n    onMyChannel (channel, index) {\r\n      // 01 区分是编辑编辑状态还是非编辑\r\n      if (this.isEditShow) {\r\n        // 03 判断是否为'推荐'\r\n        if (index === 0) return\r\n\r\n        // 编辑状态 - 删除频道\r\n        // 01 删除选中频道\r\n        this.myChannelsClone.splice(index, 1)\r\n\r\n        // 02 让激活 的索引active - 1\r\n        if (index <= this.active) {\r\n          this.$emit('update-active', this.active - 1, true)\r\n        }\r\n\r\n        // 删除数据持久化\r\n        this.deleteChannel(channel)\r\n      } else {\r\n        // 非编辑状态 - 切换频道\r\n        this.$emit('update-active', index)\r\n      }\r\n    },\r\n\r\n    async deleteChannel (delchannel) {\r\n      if (this.user) {\r\n        // 已登录状态\r\n        try {\r\n          await deleteUserAllChannelsAPI(delchannel.id)\r\n        } catch (err) {\r\n          this.$toast('删除频道失败')\r\n        }\r\n      } else {\r\n        // 未登录状态\r\n        setItem('TOUTIAO_CHANNELS', this.myChannels)\r\n      }\r\n    }\r\n\r\n  },\r\n  // 通过计算属性获取推荐列表内容\r\n  computed: {\r\n    /*\r\n      从store状态管理器中获取state数据的两种方式\r\n      如何选择: 如果一个页面中频繁的回使用到state中的某几个变量时, 使用方法2，可以减少描述变量的代码, 虽然会用导各种state中定义 的变量,但每个变量的使用频率不平凡旋转选择方法一\r\n      01 this.$store.state.数据\r\n      02 coputed: {\r\n        ...mapState(['数据'])\r\n      }\r\n    */\r\n    ...mapState(['user']), // 数据持久化处理时依据user状态做处理使用\r\n\r\n    // 方法一 手动过滤\r\n    recommendChannels () {\r\n      const newList = this.allChannels.filter(channel => {\r\n        return !this.myChannels.find(myChannel => {\r\n          return myChannel.id === channel.id // 两个id相同时选出相同的频道。所以需要加上逻辑 ！。让不相同的结果返回出去\r\n        })\r\n      })\r\n      return newList\r\n    },\r\n\r\n    /*\r\n      find - 返回查找到的那个元素 -- 没有返回undefined\r\n      findIndex - 返回查找到的那个元素所在的索引, 没有返回 -1\r\n      indexOf - 元素均为简单数据类型 返回查找到的那个元素所在的索引, 没有返回 -1\r\n      icludees - 判断有无改元素, 有返回true 无返回false\r\n    */\r\n    // 方法二 使用 lodash 过滤数据\r\n    recommendChannels_lodash () {\r\n      return this.$_.differenceBy(this.allChannels, this.myChannels, 'id')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.channel-editer {\r\n  .van-cell__title {\r\n    height: 58px;\r\n    line-height: 58px;\r\n    font-size: 32px;\r\n    color: #333;\r\n  }\r\n\r\n  .edit-btn {\r\n    width: 100px;\r\n    height: 48px;\r\n    line-height: 48px;\r\n    font-size: 26px;\r\n    color: #f85959;\r\n    border: 1px solid #f85959;\r\n  }\r\n\r\n  .channel-item{\r\n    height: 86px;\r\n    width: 160px;\r\n  }\r\n\r\n  :deep(.van-grid-item__content) {\r\n    background-color: #f5f5f6;\r\n\r\n    .van-grid-item__text {\r\n      color: #222;\r\n      font-size: 28px;\r\n      margin-top: 0;\r\n      white-space: nowrap;  // 不换行\r\n      flex-direction: row;\r\n    }\r\n  }\r\n\r\n  // 我的频道 关闭按钮 处理\r\n  :deep(.my-grid) {\r\n\r\n    .van-grid-item__content{\r\n      .van-grid-item__icon-wrapper {\r\n        position: absolute;\r\n        top: -10px;\r\n        right: -10px;\r\n        color:#cacaca;\r\n        z-index: 2;\r\n        font-size: 30px;\r\n      }\r\n    }\r\n\r\n    // 设置动态高亮\r\n    .active {\r\n      .van-grid-item__text {\r\n        color: #f85959;\r\n      }\r\n    }\r\n  }\r\n\r\n  // 推荐频道 '+' 处理\r\n  :deep(.recommend-grid) {\r\n    .van-grid-item__content {\r\n      // flex 布局的横向布局\r\n      white-space: nowrap;\r\n      flex-direction: row;\r\n\r\n      .van-icon-plus {\r\n        font-size: 28px;\r\n        margin-right: 6px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./channel-edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./channel-edit.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./channel-edit.vue?vue&type=template&id=5c7c3ed5&scoped=true&\"\nimport script from \"./channel-edit.vue?vue&type=script&lang=js&\"\nexport * from \"./channel-edit.vue?vue&type=script&lang=js&\"\nimport style0 from \"./channel-edit.vue?vue&type=style&index=0&id=5c7c3ed5&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5c7c3ed5\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"home-container\">\r\n    <van-nav-bar title=\"标题\" class=\"page-nav-bar\" fixed>\r\n\r\n      <!-- #title 插槽位置是在vant组件开发文档中规定的 -->\r\n      <template #title>\r\n        <van-button\r\n          class=\"search-btn\"\r\n          round\r\n          icon=\"search\"\r\n          type=\"info\"\r\n          to=\"/search\"\r\n        >\r\n          搜索\r\n        </van-button>\r\n      </template>\r\n    </van-nav-bar>\r\n\r\n    <!-- 滚动标签 -->\r\n    <van-tabs class=\"channel-tabs\" v-model=\"active\" animated swipeable swipe-threshold=\"2\">\r\n      <van-tab\r\n        v-for=\"obj in channels\"\r\n        :key=\"obj.id\"\r\n        :title=\"obj.name\"\r\n      >\r\n\r\n        <!-- 把v-for循环得到的obj数据传给子组件 -->\r\n        <article-list :channel=\"obj\"></article-list>\r\n      </van-tab>\r\n\r\n      <template #nav-right>\r\n        <!-- 创建这个小盒子的目的是为了把最后一个滚动标签挤出来,防止更多按钮遮挡标签 -->\r\n        <div class=\"placeholder\"></div>\r\n\r\n        <div class=\"hamburger-btn\" @click=\"isChannelEditShow = true\">\r\n          <i class=\"toutiao toutiao-gengduo\"></i>\r\n        </div>\r\n      </template>\r\n    </van-tabs>\r\n\r\n    <!-- 频道编辑底部弹出 -- 根据vant文档一步一步书写样式-->\r\n    <van-popup\r\n      class=\"edit-channel-popup\"\r\n      v-model=\"isChannelEditShow\"\r\n      position=\"bottom\"\r\n      :style=\"{ height: '100%' }\"\r\n      closeable\r\n      close-icon-position=\"top-left\"\r\n    >\r\n      <channel-edit\r\n        :myChannels=\"channels\"\r\n        :active=\"active\"\r\n        :allChannels=\"allChannels\"\r\n        @update-active=\"onUpdateActive\"\r\n      ></channel-edit>\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getUserChannelsAPI, getAllChannelsAPI } from '../../api/index.js'\r\nimport ArticleList from './components/article-list.vue'\r\nimport ChannelEdit from './components/channel-edit.vue'\r\nimport { mapState } from 'vuex'\r\nimport { getItem } from '../../utils/storage.js'\r\n\r\nexport default {\r\n  name: 'homeApp',\r\n  components: {\r\n    ArticleList,\r\n    ChannelEdit\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      active: 0,\r\n      channels: [], // 频道列表\r\n      isChannelEditShow: false,\r\n      allChannels: []\r\n    }\r\n  },\r\n\r\n  created () {\r\n    // 调用获取频道列表方法\r\n    this.loadChannels()\r\n    this.loadAllChannels()\r\n  },\r\n\r\n  methods: {\r\n    // 请求my频道接口\r\n    async loadChannels () {\r\n      try {\r\n        /*\r\n        if (this.user) {\r\n          // 已登录状态\r\n\r\n          // 以后调用接口返回值时, 使用解构赋值的形式 拿到真实的返回数据\r\n          const { data: res } = await getUserChannelsAPI()\r\n          // console.log(res)\r\n          this.channels = res.data.channels\r\n        } else {\r\n          // 未登录状态\r\n          // 获取本地固定频道\r\n          const localChannels = getItem('TOUTIAO_CHANNELS')\r\n          if (localChannels) {\r\n            this.channels = localChannels\r\n          } else {\r\n            const { data: res } = await getUserChannelsAPI()\r\n            this.channels = res.data.channels\r\n          }\r\n        }\r\n        */\r\n\r\n        // 优化上面情况\r\n        let channelsTemp = [] // 临时列表数据, 最后会将它赋值给this.channels\r\n        const localChannels = getItem('TOUTIAO_CHANNELS') // 获取本地列表\r\n        if (this.user || !localChannels) {\r\n          // 登录了或者本地数据不存在的情况下就调用接口获取数据\r\n          const { data: res } = await getUserChannelsAPI()\r\n          channelsTemp = res.data.channels\r\n        } else {\r\n          // 除上面情况外 均可使用本地列表数据\r\n          channelsTemp = localChannels\r\n        }\r\n\r\n        // 将临时列表赋予本地列表数据\r\n        this.channels = channelsTemp\r\n      } catch (err) {\r\n        this.$toast('获取频道列表失败')\r\n      }\r\n    },\r\n\r\n    // 请求所频道接口地址\r\n    async loadAllChannels () {\r\n      try {\r\n        const { data: res } = await getAllChannelsAPI()\r\n        // console.log(res.data.channels, 'c')\r\n        this.allChannels = res.data.channels\r\n      } catch (err) {\r\n        this.$toast('获取频道列表失败')\r\n      }\r\n    },\r\n\r\n    onUpdateActive (index, isShow = false) {\r\n      this.active = index\r\n      this.isChannelEditShow = isShow\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapState(['user'])\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .home-container {\r\n    padding-top: 174px;\r\n    padding-bottom: 100px;\r\n    // /deep/ 是vue2的常用写法，在vue3中不可使用， :deep()可以适用于vue2 3\r\n\r\n    :deep(.van-nav-bar__title){\r\n      max-width: unset;\r\n    }\r\n\r\n    .search-btn {\r\n      background-color: #5babfb;\r\n      border: none;\r\n      width: 555px;\r\n      height: 64px;\r\n      font-size: 28px;\r\n\r\n      .van-icon {\r\n        color: #fff;\r\n        font-size: 28px;\r\n      }\r\n    }\r\n    :deep(.channel-tabs) {\r\n\r\n    .van-tabs__wrap {\r\n      height: 82px;\r\n      position: fixed;\r\n      top: 92px;\r\n      z-index: 1;\r\n      left: 0;\r\n      right: 0;\r\n    }\r\n\r\n    .van-tab {\r\n      border-right: 1px solid #edeff3;\r\n      min-width: 200px;\r\n      font-size: 30px;\r\n      color: #777;\r\n    }\r\n\r\n    .van-tab--active {\r\n      color: #333;\r\n      font-weight: 700;\r\n    }\r\n\r\n    .van-tabs__line {\r\n      width: 32px;\r\n      background-color: #5babfb;\r\n    }\r\n\r\n    .placeholder {\r\n      width: 66px;\r\n      flex-shrink: 0;  /* flex布局需要用flex-shirnk取消该元素在fles布局的计算 */\r\n    }\r\n\r\n    .hamburger-btn {\r\n      position: fixed;\r\n      right: 0;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 66px;\r\n      height: 82px;\r\n      background-color: #fff;\r\n      opacity: 0.9;\r\n\r\n      &::before {\r\n        content: '';\r\n        position: absolute;\r\n        left: 0;\r\n        width: 2px;\r\n        height: 58px;\r\n        background-size: contain;\r\n        background-image: url(../../assets/gradient-gray-line.png);\r\n      }\r\n    }\r\n    }\r\n\r\n    // 弹出层样式\r\n    .edit-channel-popup {\r\n      padding-top: 100px;\r\n      box-sizing: border-box;\r\n    }\r\n  }\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./home.vue?vue&type=template&id=e54957f6&scoped=true&\"\nimport script from \"./home.vue?vue&type=script&lang=js&\"\nexport * from \"./home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./home.vue?vue&type=style&index=0&id=e54957f6&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e54957f6\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","_v","proxy","on","$event","isChannelEditShow","model","value","active","callback","$$v","expression","_l","channels","obj","id","name","style","height","allChannels","onUpdateActive","staticRenderFns","refreshingText","onRefresh","refreshing","finished","error","onLoad","loading","list","item","i","article","art_id","_s","title","cover","type","images","img","index","_e","aut_name","comm_count","_f","pubdate","props","default","data","methods","component","timesTamp","components","ArticleItem","channel","channel_id","timestamp","JSON","isEditShow","myChannels","class","onMyChannel","directives","rawName","recommendChannels_lodash","onAddChannel","myChannelsClone","seq","setItem","computed","recommendChannels","ArticleList","ChannelEdit","created","channelsTemp"],"sourceRoot":""}